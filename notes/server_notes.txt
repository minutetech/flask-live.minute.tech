Server Notes
-----------------
Setup server using:
-https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh
-https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04
-https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04
-https://www.digitalocean.com/community/tutorials/how-to-deploy-a-flask-application-on-an-ubuntu-vps

DEV-->ssh root@138.197.210.172

LIVE-->ssh douglasrcjames@138.68.238.112
Ubuntu
-User: root / Password: Quincydog#1
-User: douglasrcjames / Password: Red!kush#1
MySQL
-User: root / Password: Quincydog#1
-User douglasrcjames / Password: Red!kush#1
-User: admin / Password: Printerugh!1

DigitalOcean Server Info:
Running Ubuntu 17.10 and Python 2.7.14

-Login to MYSQL server
-->mysql -u douglasrcjames -p

-Restart DigitalOcean server
-->service apache2 restart

SECRET KEY
application.secret_key = 'quincyisthebestdog11'

-Used this to setup virtual environment (https://www.twilio.com/docs/guides/how-to-set-up-your-python-and-flask-development-environment#start-a-new-project-with-virtualenv)
-In order to play with virtual environment, you must navigate to that directory, such as 
$ cd C:\Users\Dougroot\Python27\Projects\minutetech-flask

# Create a new virtualenv named "minutetech"
$ virtualenv minutetech
New python executable in minutetech/bin/python
Installing setuptools, pip, wheel...done.

# Activate the virtualenv (Windows)
$ venv\Scripts\activate

-Must install required libraries such as...
$ pip install Flask
$ pip install WTForms
$ pip install Flask-WTF
$ pip install passlib
$ pip install flask_uploads

$ pip install mysqlclient 
-THIS CAUSED A BIG ERROR on windows, probably has to do with Python Version 3.7 not supported
-Make sure to install MySQL and connectors onto computer (for local testing especially) (https://dev.mysql.com/downloads/mysql/)
-May need to install VS C++ Compiler for Python 2.7 (https://www.microsoft.com/en-us/download/details.aspx?id=44266)
FIXED:
-Need to use Python Version 2.7.14 cuz that's how I set it up initially
-To install the mysqlclient library, go through here (https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient) and get the 27 version for windows
Put the .whl file in a folder
$ cd C:\Users\Dougroot\Python27\Projects\minutetech-flask\venv\Lib\site-packages
Then install
$ pip install mysqlclient-1.3.12-cp27-cp27m-win_amd64.whl
-Not sure if these same issues would arise outside of a Windows installation

# Save all dependencies 
$ pip freeze > requirements.txt
# To install later if needed
$ pip install -r requirements.txt


-Then run app
$ python __init__.py
-Then navigate to ( http://localhost:5000 ) to view!
-Can use ngrok to view over internet!

-To start the mysqld server from the command line, you should start a console window (or “DOS window”) and enter this command:
-Needs to be started up each time you use localhost

$ C:\> "C:\Program Files\MySQL\MySQL Server 5.7\bin\mysqld"
-The path to mysqld may vary depending on the install location of MySQL on your system.

-Remember to create new MySQL tables and setup the dbconnect.py file with the right info when setting up new server

-Would be nice to have these local files setup over a github to easily just push out changes (need it to be private tho)

-Location of FlaskApp.conf
$ /etc/apache2/sites-enabled/


GIT
-Setup using: https://www.youtube.com/watch?v=OtxdNuodlIE&index=10&list=PLcnJBtw1RdVk04VwFlCGKNg0WHNp4TuOb
-Trouble with SSH key to github: https://stackoverflow.com/questions/10476360/key-is-invalid-message-on-github
-Also helpful video: https://www.youtube.com/watch?v=HVsySz-h9r4
-DigitalOcean: https://www.digitalocean.com/community/tutorials/how-to-use-git-effectively

Config (same as github)
$ git config --global user.name "douglasrcjames"
$ git config --global user.email "douglasrcjames@gmail.com"

Create a new repository on the command line
$ echo "# minutetech-flask" >> README.md
$ git init
$ git add README.md
$ git commit -m "first commit"
$ git remote add origin git@github.com:douglasrcjames/minutetech-flask.git
$ git push -u origin master

Create gitignore file
$ touch .gitignore

Start tracking the current folder on git
$ git init

Add all files in working directory (wd) to git
$ git add -A
Add one file
$ git add file.py

Check files in staging area
$ git status

Remove file from staging area
$ git reset file.py
All files
$ git reset

Committ changes from staging area to repository
$ git commit -m "note"

Show recent changes
$ git log

Add remote repo (origin can be any name ie minutetech)
$ git remote add origin git@github.com:douglasrcjames/minute.tech-flask.git

Clone repo into directory
$ git clone https://github.com/douglasrcjames/minute.tech-flask.git

View actions on repo
$ git remote -v

Shows changes to code
$ git diff

Pulls any changes that have been made since the last time we pulled from the repo (master is the branch)
$ git pull origin master

FINAL STEP -> pushes the final product to the repo
$ git push origin master

Removing file with git
$ rm -rf filename.txt

List all files (even hidden) in current directory
$ ls -a

Remove- cached folder from git 
$ git rm -r --cached myFolder

-Branching is used when adding features, but need to do unit testing before merging with master branch.
-Branches are normally deleted after merging because they are no longer adding those features


-Creating sudo user/user info: https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-quickstart

-New users are located under /home/

View users on server
$ getent passwd | cut -d':' -f1

*Right clicking on folder and properties, you can change permissions

*flaskapp.wsgi file needs to be in webapp main folder (at least)

*Importing files from different folder: https://stackoverflow.com/questions/4383571/importing-files-from-different-folder


*If you get the error: " IndentationError: unindent does not match any outer indentation level "
Set Sublime Text to use tabs for indentation: View --> Indentation --> Convert Indentation to Tabs




============================================
Once working locally...

$ C:\Users\Dougroot>cd Python27\Projects\minutetech-flask\venv\Scripts

$ C:\Users\Dougroot\Python27\Projects\minutetech-flask\venv\Scripts>Activate

$ (minutetech) C:\Users\Dougroot\Python27\Projects\minutetech-flask\venv\Scripts>cd ../../

$ (minutetech) C:\Users\Dougroot\Python27\Projects\minutetech-flask\> python __init__.py

* Restarting with stat
* Debugger is active!
* Debugger PIN: 347-956-374
* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)


To pull change to Live Server...

> Login to PuTTy for server
$ cd ../-var/www/FlaskApp/FlaskApp/

$ git pull origin master

$ service apache2 restart

---Minute.tech Notes--

To Do List
------------------
-Get SSL before launch
	-https://certbot.eff.org/#ubuntutzesty-apache
	-attach www.minute.tech to url then use "sudo certbot --apache"
-need description of minute.techs on splash
-Read up on list functionality (https://docs.python.org/2/tutorial/datastructures.html)
-properly credit icon artists
-virtural server for live updates?
-setup a bug submission form!
-Need to properly seperate templates into folders (tech vs client) and views into .py files for easy editing and viewing
	-https://stackoverflow.com/questions/11994325/how-to-divide-flask-app-into-multiple-py-files
-change tos to the right address
-add a tad bit more spacing between the body and the navbar
-put question asking form box on main page (and linked to the ask button somehow)
-Might need to implement MySQLAcademy and Flask Security to make sure my site is legit. (https://pythonhosted.org/Flask-Security/index.html)
-Change colors of flashes depending on type of error
-textarea (body, bio, prof_pic etc) inputs are open for SQLinjection (wont work with thwart() function cuz of new lines and such chars)
-just before launch do a quick system test using that algorithm you made to put users into the system. See how many users the system can support (and use that number to brag later lmao!)
-might want to eventually make an extends file for just the navbar
-if you are logged in as a client account, and when you try and change password and you authenticate with a different account, you will authenticate and be able to change password... much match the session variable not the server
-On main page, have 4 boxes point from one to the other explaining the progression of a question from message, to voice call, then to video call, then to in person (maybe have mitch make this)
-setup git with digital ocean for automatic pushes from working with local environment. First need to make sure that I dont have to change the files directories when pushed (such as the user profile pic location) (https://www.youtube.com/watch?v=OtxdNuodlIE)
	-will have to gitigore the database connecting folder
	-will have to organize local files the exact same as they are on digital ocean (i.e. venv)
-make minute.tech BETA branded

-Need to figure out how to set default photo save location with 
	--app.config['UPLOADED_PHOTOS_DEST'] = os.getcwd()
	- getcwd() might be wrong

profiles:
---------
-need to confirm someone is human
-Make technicians sign page that they are independent contractors, like TaskRabbit (in media folder)
-create user rating system
	-rewarding technicians 
-change error margins on the account registeration page 
-copy form validation for each form (done)?
-add email capabilities (to email when account creation with account ID)
-tech profile pic needs to be a picture of them or it will be deleted, NOTE this
-users cant submit too many profile photos... need to delete old ones. Perhaps store like up to 10 or 5 for later use?
-When we create referral program, link to the register and techregister and techlogin pages
-Need to check that when a user changes their email, that it does not already exist
-Need to implement cropping of the photo, flask has a library for this


ticketing:
---------
-built rooms with flask-socket-io here(https://www.youtube.com/watch?v=RdSrkkrj3l4)
-create pagination for each question page to only display maybe 50 questions
-upload profile picture to database (Flask-Uploads)
-create button to indicate answer in the thread and resolve the question
	-https://stackoverflow.com/questions/18290142/multiple-forms-in-a-single-page-using-flask-and-wtforms --> need to allow the client to identify which response was the answer
-if you use the `return redirect(url_for('account'))` link to refresh the page back to the select page, but need to keep that `%Dslect_q=%D5` thingy in the URL
-probably take out the "difficulty" field
-explain what a "tag" is (mom didnt know)
-start description with "Example: ..."
-add "views" to tickets
-For tickets use UI TABLE at bottom!!




FAILED-TRY DOING FORM VALIDATION FOR select_q value passing!!!!!!!!!! (pass it a defautl value)



